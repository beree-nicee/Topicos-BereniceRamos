package org.example;

// Clase adicional Bicicleta que tambi√©n implementa la interfaz Vehiculo
class Bicicleta implements Vehiculo {
    private String tipo;           // Campo privado para el tipo de bicicleta
    private int numVelocidades;    // Campo privado para el n√∫mero de velocidades

    // Constructor que recibe tipo y n√∫mero de velocidades
    public Bicicleta(String tipo, int numVelocidades) {
        this.tipo = tipo;                       // Asigna el tipo a la instancia
        this.numVelocidades = numVelocidades;   // Asigna el n√∫mero de velocidades
    }

    // Implementaci√≥n del m√©todo acelerar para bicicletas
    @Override
    public void acelerar() {
        // Imprime mensaje espec√≠fico sobre pedalear la bicicleta
        System.out.println("La bicicleta " + tipo + " est√° siendo pedaleada");
    }

    // Implementaci√≥n del m√©todo frenar para bicicletas
    @Override
    public void frenar() {
        // Imprime mensaje sobre el tipo de frenos de la bicicleta
        System.out.println("La bicicleta est√° frenando con frenos de mano");
    }

    // Implementaci√≥n del m√©todo mostrarInfo para bicicletas
    @Override
    public void mostrarInfo() {
        // Imprime informaci√≥n completa con emoji y caracter√≠sticas ecol√≥gicas
        System.out.println("üö≤ Bicicleta: " + tipo + " - " + numVelocidades + " velocidades, ecol√≥gica");
    }
}
